Hello and welcome to web 4.0's Django tutorial!

We hope that our material helps you become a great rapid web developer.

MAKE A VIRTUAL ENVIRONMENT (it is recommended to develop in Django in a virtual environment):
    Terminal:
        python -m venv path/to/new/virtual/environment

        To activate: source path/to/virtual/environment/bin/activate
    Help:
        https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/development_environment

DEPENDENCIES:
1. Ensure that you have python or python3
    Download the latest version if necessary:
        https://www.python.org/downloads/

2. Install Django (Windows, macOS, Linux, Solaris) in the virtual environment
    Using pip in the terminal:
        $ python -m pip install Django
    Help:
        https://docs.djangoproject.com/en/4.0/topics/install/


START DEVELOPING!
OUR TUTORIAL:
1. Enter desired location and clone project 
    Terminal:
        git clone git@github.com:hh15248/web4.0-Django.git

2. cd into the folder and run the project
    Terminal:
        cd web4.0-django/my_demo
        python manage.py runserver
        Note: your command may be python3 manage.py runserver

        copy and paste the url from the output in your browser to view the webapp
        http://127.0.0.1:8000/

3. Add yourself as a superuser to view Bevo's admin page
    Terminal:
        (Ctrl+C to Quit)
        python manage.py createsuperuser

    fill out respective fields (email not necessary)

    Run the demo in terminal and pull up website:
        python manage.py runserver
    
    Add "admin/" to the base url and login to easily view the database info
    http://127.0.0.1:8000/admin/

4. Fill out the contact form
    Exit out of the admin page by changing the url to the original by deleting "admin/"
    http://127.0.0.1:8000/

    Use the hyperlinked navbar to go to the "Contact" page
    
    Fill out the contact form for bevo if you want to be friends.

    Change over to the admin page and click on "Friends" to view your friend request 
    http://127.0.0.1:8000/admin/

   
5. Add the best_school selection to the contact form
    Quit the webapp in the terminal (Ctrl+C) and locate the contact directory

    Uncomment the lines in the contact/forms.py and contact/models.py to add the best_school feature to the poll

    Change the database in the terminal:
        python manage.py makemigrations contact
        python manage.py migrate
    
    Rerun the following in the terminal and go to the contact page to view changes:
        python manage.py runserver

6. Edit bevo's about page HTML file in templates
    Go to the about page to see more info about bevo
        http://127.0.0.1:8000/about/

    While the website is still up (no Ctrl+c !), open templates/about.html file 
        Note: not contact/templates

    Uncomment the html paragraph and add necessary info to the file and save your edits
        Example: <p>
                    I am orange and I like to play in fields
                 </p>
    
    No need to rerun from the terminal or migrate-- just refresh your website
    (If you quit the server just rerun python manage.py runserver in the terminal to view changes)


CHALLENGE: Learn to create an entire app by making a new app to list bevo's friends with the instructions (steps 4-8) below

START NEW PROJECT:
1. Activate your virtual environment
    Terminal:
        source path/to/virtual/environment/bin/activate
2. Create a project
    Terminal:
        cd path/to/desired/location/
        python manage.py startproject site_name

3. View & edit settings
    - make your code os-independent by using import os & os.path()
    Help with os:
        https://docs.djangoproject.com/en/4.0/intro/reusable-apps/

4. Create apps
    Terminal:
        python manage.py startapp app_name

    register your model in admin.py

    add your app name to INSTALLED_APPS in settings.py of the project directory

    create and edit models in models.py
        
    Help with models:
        https://docs.djangoproject.com/en/4.0/topics/db/models/

5. Create views and get website ready
    create HTML files for your app's page
    Help with HTML: 
        https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics
    
    edit views in views.py to incorporate HTML
    Help with views:
        https://data-flair.training/blogs/django-views/

    add the path to your url in urls.py
    Help with urls:
        https://docs.djangoproject.com/en/4.0/topics/http/urls/

6. Migrate
    Terminal:
        python manage.py makemigrations app_name 
        python manage.py migrate

7. Run
    python manage.py runserver

8. Edit & repeat steps 3-8 to build up your apps!

DEBUGGING HELP:
-- when in doubt migrate!!
-- did you register your model in admin.py?
-- did you add your model to the apps in settings.py?
-- check the urls.py and views.py to make sure your models are imported and lead to the correct html file
-- console and the webapp itself have very descriptive error messages
-- stack overflow >>>

Good luck!
--web4.0